grammar Simple;

// Lexer rules
INT     : [0-9]+ ;
FLOAT   : [0-9]+ '.' [0-9]* | '.' [0-9]+ ;
CHAR    : '\'' . '\'' ;
STRING  : '"' .*? '"' ;
BOOL    : 'TRUE' | 'FALSE';
BEGIN   : 'BEGIN';
END     : 'END';
IDENTIFIER: [a-zA-Z_][a-zA-Z0-9_]*;
DATATYPE: 'INT' | 'FLOAT' | 'CHAR' | 'STRING' | 'BOOL';
DATA: INT | FLOAT | CHAR | STRING | BOOL;
EXPRESSION: IDENTIFIER | DATA;


// Parser rules
start   : BEGIN line* END EOF ;
line    : NEWLINE | statement ;
statement : assignment;
assignment : DATATYPE IDENTIFIER '=' EXPRESSION';';
NEWLINE : '\r'? '\n' ; 

// Whitespace and comment rules
WS      : [ \t]+ -> skip ;
COMMENT : '//' ~[\r\n]* -> skip ;